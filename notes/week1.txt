week1
---------------------------------------
I. Introduction
---------------------------------------
What is Machine Learning
------------------------
Tom Mitchell(1998): Well-posed Learning Problem: A computer program is said to
learn from experience E with respect to some task T and some performance measure
P, if its performance on T, as measured by P, improves with experience E.

Supervised Learning:
--------------------
"right answers" given
regression: predict continuous real-valued output
classification: predict discrete-valued output

Unsupervised Learning:
----------------------
Cocktail party problem algorithm

---------------------------------------
II. Linear Regression with One Variable
---------------------------------------
Cost Function:
--------------
h(x) = Ø0 + Ø1x
minimize J(Ø0, Ø1) = (1 / 2m) * ∑(h(x) - y)^2 (m = number of training examples)
=> cost function / squared error function
=> visualized using Contour plots / Contour figures
=> convex function (bowl-shaped function)

Gradient decent:
----------------
Ø <= Ø - å * (∆ / ∆Ø) * J(Ø) (repeate updating Øs until convergence)
=> å : learning rate
=> (∆ / ∆Ø) * J(Ø) : derivative

---------------------------------------
III. Linear Algebra Review
---------------------------------------
Matrix: Rectangular array of numbers
Dimensions of matrix: number of rows x number of columns

Vector: An n x 1 matrix (if n = 4 => 4-dimentional vector)
1-indexed vector vs 0-indexed vector (index starts from 1 or 0)

Scalar(real number) multiplication: each element multiply the number one by one
Matrix multiplication: a x b matrix * b x c matrix = a x c matrix

Properties:
A x B != B x A (not commutative)
(A * B) * C = A * (B * C) (Associative)
Identity Matrix: (1 is identity, because 1 * z = z * 1 = z)
    - denoted I
    - examples:
        1 0     1 0 0
        0 1     0 1 0
                0 0 1
    for any matrix A: A(m x n) * I(n x n) = I(m x m) * A(m x n) = A

Inverse:
inverse * number = identity (1/3 is the inverse of 3 ( 3 * 1 / 3 = 1))
not every number has an inverse (0)

Matrix Inverse: (has to be square matrix)
If A is an m x m matrix, and if it has an inverse, A * A^-1 = A^-1 * A = I

Matrix Transpose: (every row becomes column)
Let A be an m x n matrix, and let B = A^T. Then B is an n x m matrix,
and Bij = Aji
